name: CI Pipeline

# Ejecuta el pipeline en push a main y pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: CI - Test, Build & Docker
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout del código
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    # 2. Configurar Node.js
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
    
    # 3. INSTALACIÓN DE DEPENDENCIAS
    - name: 📋 Install Dependencies
      run: yarn install --frozen-lockfile
    
    # 4. ANÁLISIS ESTÁTICO / LINTER (TypeScript check)
    - name: 🔍 TypeScript Static Analysis
      run: npx tsc --noEmit
    
    # 5. EJECUCIÓN DE PRUEBAS UNITARIAS
    - name: 🧪 Run Unit Tests
      run: yarn test
    
    # 6. COMPILACIÓN/BUILD
    - name: 🏗️ Build Application
      run: yarn build
    
    # 7. CONSTRUCCIÓN DE IMAGEN DOCKER
    - name: 🐳 Build Docker Image
      run: docker build -t blog-api:${{ github.sha }} .
    
    # 8. LOGIN A DOCKER HUB (solo en push a main)
    - name: 🔐 Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # 9. PUBLICACIÓN DE IMAGEN DOCKER (solo en push a main)
    - name: 🚀 Push Docker Image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker tag blog-api:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/blog-api:latest
        docker tag blog-api:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/blog-api:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/blog-api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/blog-api:${{ github.sha }}
    
    # 10. Marcador de Deployment en New Relic (solo en push a main exitoso)
    - name: 📊 Marcador de Deployment en New Relic
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: newrelic/deployment-marker-action@v2.3.0
      with:
        apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
        guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
        version: "${{ github.sha }}"
        user: "${{ github.actor }}"
        description: "Deployment desde rama main - SHA: ${{ github.sha }}"
    
    # 11. Resumen del pipeline
    - name: ✅ Resumen del Pipeline
      run: |
        echo "✅ Dependencias instaladas exitosamente"
        echo "✅ Análisis estático de TypeScript completado"
        echo "✅ Todas las pruebas unitarias pasaron"
        echo "✅ Build de la aplicación completado"
        echo "✅ Imagen Docker construida exitosamente"
        if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "✅ Imagen Docker publicada en registry"
          echo "✅ Marcador de deployment creado en New Relic"
        fi